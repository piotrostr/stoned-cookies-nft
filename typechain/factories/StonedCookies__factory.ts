/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { StonedCookies, StonedCookiesInterface } from "../StonedCookies";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address payable",
        name: "relayerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
    ],
    name: "MetaTransactionExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "ERC712_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "functionSignature",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "sigR",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "sigS",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "sigV",
        type: "uint8",
      },
    ],
    name: "executeMetaTransaction",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDomainSeperator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_quantity",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mintingEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxyRegistryAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "setBaseTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newPrice",
        type: "uint256",
      },
    ],
    name: "setMintPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newAddress",
        type: "address",
      },
    ],
    name: "setProxyRegistryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleMinting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6007805460ff19169055600a80546001600160a01b03191673a5409ec958c83c3f309868babaca7c86dcb077c117905560e0604052602960808181529062002cb060a03980516200005991600b9160209091019062000325565b50611068600c556000600d819055665543df729c0000600e55600f556010805460ff1916600117905560146011553480156200009457600080fd5b506040518060400160405280600d81526020016c53746f6e6564436f6f6b69657360981b8152506040518060400160405280600381526020016253544360e81b815250620000f1620000eb6200015460201b60201c565b62000170565b81516200010690600190602085019062000325565b5080516200011c90600290602084019062000325565b505060408051808201909152600d81526c53746f6e6564436f6f6b69657360981b60208201526200014e9150620001c0565b62000408565b60006200016b6200022460201b620015ae1760201c565b905090565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60075460ff1615620002095760405162461bcd60e51b815260206004820152600e60248201526d185b1c9958591e481a5b9a5d195960921b604482015260640160405180910390fd5b620002148162000283565b506007805460ff19166001179055565b6000333014156200027d57600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b03169150620002809050565b50335b90565b6040518060800160405280604f815260200162002c61604f9139805160209182012082519282019290922060408051808201825260018152603160f81b90840152805180840194909452838101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608401523060808401524660a0808501919091528151808503909101815260c090930190528151910120600855565b8280546200033390620003cb565b90600052602060002090601f016020900481019282620003575760008555620003a2565b82601f106200037257805160ff1916838001178555620003a2565b82800160010185558215620003a2579182015b82811115620003a257825182559160200191906001019062000385565b50620003b0929150620003b4565b5090565b5b80821115620003b05760008155600101620003b5565b600181811c90821680620003e057607f821691505b602082108114156200040257634e487b7160e01b600052602260045260246000fd5b50919050565b61284980620004186000396000f3fe6080604052600436106102375760003560e01c80636352211e11610138578063a22cb465116100b0578063d26ea6c01161007f578063e985e9c511610064578063e985e9c51461061e578063f2fde38b1461063e578063f4a0a5281461065e57600080fd5b8063d26ea6c0146105e9578063d547cfb71461060957600080fd5b8063a22cb46514610569578063b88d4fde14610589578063c87b56dd146105a9578063cd7c0326146105c957600080fd5b80637501f741116101075780638da5cb5b116100ec5780638da5cb5b1461051c57806395d89b411461053a5780639fd6db121461054f57600080fd5b80637501f741146104f15780637d55094d1461050757600080fd5b80636352211e146104865780636817c76c146104a657806370a08231146104bc578063715018a6146104dc57600080fd5b806320379ee5116101cb578063313ce5671161019a5780633ccfd60b1161017f5780633ccfd60b1461043e57806340c10f191461045357806342842e0e1461046657600080fd5b8063313ce567146104155780633408e4701461042b57600080fd5b806320379ee51461038a57806323b872dd1461039f5780632d0335ab146103bf57806330176e13146103f557600080fd5b8063095ea7b311610207578063095ea7b3146102f65780630c53c51c146103185780630f7e59701461032b57806318160ddd1461037457600080fd5b80629a9b7b1461024357806301ffc9a71461026c57806306fdde031461029c578063081812fc146102be57600080fd5b3661023e57005b600080fd5b34801561024f57600080fd5b50610259600d5481565b6040519081526020015b60405180910390f35b34801561027857600080fd5b5061028c61028736600461246a565b61067e565b6040519015158152602001610263565b3480156102a857600080fd5b506102b161071b565b6040516102639190612642565b3480156102ca57600080fd5b506102de6102d936600461250a565b6107ad565b6040516001600160a01b039091168152602001610263565b34801561030257600080fd5b5061031661031136600461243e565b610847565b005b6102b16103263660046123c0565b61098b565b34801561033757600080fd5b506102b16040518060400160405280600181526020017f310000000000000000000000000000000000000000000000000000000000000081525081565b34801561038057600080fd5b50610259600c5481565b34801561039657600080fd5b50600854610259565b3480156103ab57600080fd5b506103166103ba3660046122e0565b610b91565b3480156103cb57600080fd5b506102596103da36600461228a565b6001600160a01b031660009081526009602052604090205490565b34801561040157600080fd5b506103166104103660046124c1565b610c1f565b34801561042157600080fd5b50610259600f5481565b34801561043757600080fd5b5046610259565b34801561044a57600080fd5b5061028c610caf565b61031661046136600461243e565b610d6a565b34801561047257600080fd5b506103166104813660046122e0565b610f60565b34801561049257600080fd5b506102de6104a136600461250a565b610f7b565b3480156104b257600080fd5b50610259600e5481565b3480156104c857600080fd5b506102596104d736600461228a565b611006565b3480156104e857600080fd5b506103166110a0565b3480156104fd57600080fd5b5061025960115481565b34801561051357600080fd5b50610316611125565b34801561052857600080fd5b506000546001600160a01b03166102de565b34801561054657600080fd5b506102b16111b2565b34801561055b57600080fd5b5060105461028c9060ff1681565b34801561057557600080fd5b5061031661058436600461238d565b6111c1565b34801561059557600080fd5b506103166105a4366004612321565b6111d3565b3480156105b557600080fd5b506102b16105c436600461250a565b611262565b3480156105d557600080fd5b50600a546102de906001600160a01b031681565b3480156105f557600080fd5b5061031661060436600461228a565b61129c565b34801561061557600080fd5b506102b1611337565b34801561062a57600080fd5b5061028c6106393660046122a7565b611346565b34801561064a57600080fd5b5061031661065936600461228a565b61142f565b34801561066a57600080fd5b5061031661067936600461250a565b611530565b60006001600160e01b031982167f80ac58cd0000000000000000000000000000000000000000000000000000000014806106e157506001600160e01b031982167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061071557507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b60606001805461072a906126e3565b80601f0160208091040260200160405190810160405280929190818152602001828054610756906126e3565b80156107a35780601f10610778576101008083540402835291602001916107a3565b820191906000526020600020905b81548152906001019060200180831161078657829003601f168201915b5050505050905090565b6000818152600360205260408120546001600160a01b031661082b5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600560205260409020546001600160a01b031690565b600061085282610f7b565b9050806001600160a01b0316836001600160a01b031614156108dc5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f72000000000000000000000000000000000000000000000000000000000000006064820152608401610822565b806001600160a01b03166108ee61160a565b6001600160a01b0316148061090a575061090a8161063961160a565b61097c5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610822565b6109868383611619565b505050565b60408051606081810183526001600160a01b038816600081815260096020908152908590205484528301529181018690526109c98782878787611687565b610a3b5760405162461bcd60e51b815260206004820152602160248201527f5369676e657220616e64207369676e617475726520646f206e6f74206d61746360448201527f68000000000000000000000000000000000000000000000000000000000000006064820152608401610822565b6001600160a01b038716600090815260096020526040902054610a5f90600161178f565b6001600160a01b0388166000908152600960205260409081902091909155517f5845892132946850460bff5a0083f71031bc5bf9aadcd40f1de79423eac9b10b90610aaf90899033908a906125d1565b60405180910390a1600080306001600160a01b0316888a604051602001610ad792919061256b565b60408051601f1981840301815290829052610af19161254f565b6000604051808303816000865af19150503d8060008114610b2e576040519150601f19603f3d011682016040523d82523d6000602084013e610b33565b606091505b509150915081610b855760405162461bcd60e51b815260206004820152601c60248201527f46756e6374696f6e2063616c6c206e6f74207375636365737366756c000000006044820152606401610822565b98975050505050505050565b610ba2610b9c61160a565b826117a2565b610c145760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610822565b610986838383611871565b610c2761160a565b6001600160a01b0316610c426000546001600160a01b031690565b6001600160a01b031614610c985760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610822565b8051610cab90600b90602084019061215b565b5050565b6000610cb961160a565b6001600160a01b0316610cd46000546001600160a01b031690565b6001600160a01b031614610d2a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610822565b47610d3d6000546001600160a01b031690565b6001600160a01b03166108fc829081150290604051600060405180830381858888f1955050505050505b90565b60105460ff16610dbc5760405162461bcd60e51b815260206004820152601d60248201527f4d696e74696e672069732063757272656e746c792064697361626c65640000006044820152606401610822565b60158110610e325760405162461bcd60e51b815260206004820152602860248201527f4d6178696d756d206d696e7420696e2073696e676c65207472616e736163746960448201527f6f6e2069732032300000000000000000000000000000000000000000000000006064820152608401610822565b6000610e49600e5483611a3e90919063ffffffff16565b905080341015610ec15760405162461bcd60e51b815260206004820152602160248201527f4e6f7420656e6f756768204554482073656e743b20636865636b20707269636560448201527f21000000000000000000000000000000000000000000000000000000000000006064820152608401610822565b600c54600d54610ed1908461178f565b10610f1e5760405162461bcd60e51b815260206004820152601b60248201527f416c6c20746f6b656e732068617665206265656e206d696e74656400000000006044820152606401610822565b60005b82811015610f5a576000610f33611a4a565b9050610f3f8582611a5b565b610f47611a75565b50610f53600182612655565b9050610f21565b50505050565b610986838383604051806020016040528060008152506111d3565b6000818152600360205260408120546001600160a01b0316806107155760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e00000000000000000000000000000000000000000000006064820152608401610822565b60006001600160a01b0382166110845760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f2061646472657373000000000000000000000000000000000000000000006064820152608401610822565b506001600160a01b031660009081526004602052604090205490565b6110a861160a565b6001600160a01b03166110c36000546001600160a01b031690565b6001600160a01b0316146111195760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610822565b6111236000611a8c565b565b61112d61160a565b6001600160a01b03166111486000546001600160a01b031690565b6001600160a01b03161461119e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610822565b6010805460ff19811660ff90911615179055565b60606002805461072a906126e3565b610cab6111cc61160a565b8383611adc565b6111e46111de61160a565b836117a2565b6112565760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f7665640000000000000000000000000000006064820152608401610822565b610f5a84848484611bab565b606061126c611337565b61127583611c29565b6040516020016112869291906125a2565b6040516020818303038152906040529050919050565b6112a461160a565b6001600160a01b03166112bf6000546001600160a01b031690565b6001600160a01b0316146113155760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610822565b600a80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600b805461072a906126e3565b600a546040517fc45527910000000000000000000000000000000000000000000000000000000081526001600160a01b03848116600483015260009281169190841690829063c45527919060240160206040518083038186803b1580156113ac57600080fd5b505afa1580156113c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113e491906124a4565b6001600160a01b031614156113fd576001915050610715565b6001600160a01b0380851660009081526006602090815260408083209387168352929052205460ff165b949350505050565b61143761160a565b6001600160a01b03166114526000546001600160a01b031690565b6001600160a01b0316146114a85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610822565b6001600160a01b0381166115245760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610822565b61152d81611a8c565b50565b61153861160a565b6001600160a01b03166115536000546001600160a01b031690565b6001600160a01b0316146115a95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610822565b600e55565b60003330141561160557600080368080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505050503601516001600160a01b03169150610d679050565b503390565b60006116146115ae565b905090565b600081815260056020526040902080546001600160a01b0319166001600160a01b038416908117909155819061164e82610f7b565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006001600160a01b0386166117055760405162461bcd60e51b815260206004820152602560248201527f4e61746976654d6574615472616e73616374696f6e3a20494e56414c49445f5360448201527f49474e45520000000000000000000000000000000000000000000000000000006064820152608401610822565b600161171861171387611d5b565b611dd8565b6040805160008152602081018083529290925260ff851690820152606081018690526080810185905260a0016020604051602081039080840390855afa158015611766573d6000803e3d6000fd5b505050602060405103516001600160a01b0316866001600160a01b031614905095945050505050565b600061179b8284612655565b9392505050565b6000818152600360205260408120546001600160a01b031661181b5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610822565b600061182683610f7b565b9050806001600160a01b0316846001600160a01b031614806118615750836001600160a01b0316611856846107ad565b6001600160a01b0316145b8061142757506114278185611346565b826001600160a01b031661188482610f7b565b6001600160a01b0316146119005760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e00000000000000000000000000000000000000000000006064820152608401610822565b6001600160a01b03821661197b5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610822565b611986600082611619565b6001600160a01b03831660009081526004602052604081208054600192906119af9084906126a0565b90915550506001600160a01b03821660009081526004602052604081208054600192906119dd908490612655565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600061179b8284612681565b600d5460009061161490600161178f565b610cab828260405180602001604052806000815250611e23565b600d8054906000611a858361271e565b9190505550565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b816001600160a01b0316836001600160a01b03161415611b3e5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610822565b6001600160a01b03838116600081815260066020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611bb6848484611871565b611bc284848484611ea1565b610f5a5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610822565b606081611c6957505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115611c935780611c7d8161271e565b9150611c8c9050600a8361266d565b9150611c6d565b60008167ffffffffffffffff811115611cae57611cae61278f565b6040519080825280601f01601f191660200182016040528015611cd8576020820181803683370190505b5090505b841561142757611ced6001836126a0565b9150611cfa600a86612739565b611d05906030612655565b60f81b818381518110611d1a57611d1a612779565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611d54600a8661266d565b9450611cdc565b60006040518060800160405280604381526020016127d16043913980516020918201208351848301516040808701518051908601209051611dbb950193845260208401929092526001600160a01b03166040830152606082015260800190565b604051602081830303815290604052805190602001209050919050565b6000611de360085490565b6040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281019190915260428101839052606201611dbb565b611e2d8383612019565b611e3a6000848484611ea1565b6109865760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610822565b60006001600160a01b0384163b1561200e57836001600160a01b031663150b7a02611eca61160a565b8786866040518563ffffffff1660e01b8152600401611eec9493929190612606565b602060405180830381600087803b158015611f0657600080fd5b505af1925050508015611f36575060408051601f3d908101601f19168201909252611f3391810190612487565b60015b611fdb573d808015611f64576040519150601f19603f3d011682016040523d82523d6000602084013e611f69565b606091505b508051611fd35760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610822565b805181602001fd5b6001600160e01b0319167f150b7a0200000000000000000000000000000000000000000000000000000000149050611427565b506001949350505050565b6001600160a01b03821661206f5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610822565b6000818152600360205260409020546001600160a01b0316156120d45760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610822565b6001600160a01b03821660009081526004602052604081208054600192906120fd908490612655565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054612167906126e3565b90600052602060002090601f01602090048101928261218957600085556121cf565b82601f106121a257805160ff19168380011785556121cf565b828001600101855582156121cf579182015b828111156121cf5782518255916020019190600101906121b4565b506121db9291506121df565b5090565b5b808211156121db57600081556001016121e0565b600067ffffffffffffffff8084111561220f5761220f61278f565b604051601f8501601f19908116603f011681019082821181831017156122375761223761278f565b8160405280935085815286868601111561225057600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261227b57600080fd5b61179b838335602085016121f4565b60006020828403121561229c57600080fd5b813561179b816127a5565b600080604083850312156122ba57600080fd5b82356122c5816127a5565b915060208301356122d5816127a5565b809150509250929050565b6000806000606084860312156122f557600080fd5b8335612300816127a5565b92506020840135612310816127a5565b929592945050506040919091013590565b6000806000806080858703121561233757600080fd5b8435612342816127a5565b93506020850135612352816127a5565b925060408501359150606085013567ffffffffffffffff81111561237557600080fd5b6123818782880161226a565b91505092959194509250565b600080604083850312156123a057600080fd5b82356123ab816127a5565b9150602083013580151581146122d557600080fd5b600080600080600060a086880312156123d857600080fd5b85356123e3816127a5565b9450602086013567ffffffffffffffff8111156123ff57600080fd5b61240b8882890161226a565b9450506040860135925060608601359150608086013560ff8116811461243057600080fd5b809150509295509295909350565b6000806040838503121561245157600080fd5b823561245c816127a5565b946020939093013593505050565b60006020828403121561247c57600080fd5b813561179b816127ba565b60006020828403121561249957600080fd5b815161179b816127ba565b6000602082840312156124b657600080fd5b815161179b816127a5565b6000602082840312156124d357600080fd5b813567ffffffffffffffff8111156124ea57600080fd5b8201601f810184136124fb57600080fd5b611427848235602084016121f4565b60006020828403121561251c57600080fd5b5035919050565b6000815180845261253b8160208601602086016126b7565b601f01601f19169290920160200192915050565b600082516125618184602087016126b7565b9190910192915050565b6000835161257d8184602088016126b7565b60609390931b6bffffffffffffffffffffffff19169190920190815260140192915050565b600083516125b48184602088016126b7565b8351908301906125c88183602088016126b7565b01949350505050565b60006001600160a01b038086168352808516602084015250606060408301526125fd6060830184612523565b95945050505050565b60006001600160a01b038087168352808616602084015250836040830152608060608301526126386080830184612523565b9695505050505050565b60208152600061179b6020830184612523565b600082198211156126685761266861274d565b500190565b60008261267c5761267c612763565b500490565b600081600019048311821515161561269b5761269b61274d565b500290565b6000828210156126b2576126b261274d565b500390565b60005b838110156126d25781810151838201526020016126ba565b83811115610f5a5750506000910152565b600181811c908216806126f757607f821691505b6020821081141561271857634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156127325761273261274d565b5060010190565b60008261274857612748612763565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461152d57600080fd5b6001600160e01b03198116811461152d57600080fdfe4d6574615472616e73616374696f6e2875696e74323536206e6f6e63652c616464726573732066726f6d2c62797465732066756e6374696f6e5369676e617475726529a26469706673582212204847d267d2dbb4478284a189e2a899df28d5f1fe6c21dff48e336dbc2ae6c4e964736f6c63430008070033454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c6164647265737320766572696679696e67436f6e74726163742c627974657333322073616c742968747470733a2f2f73746f6e65642d636f6f6b6965732d6170692e6865726f6b756170702e636f6d2f";

type StonedCookiesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StonedCookiesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StonedCookies__factory extends ContractFactory {
  constructor(...args: StonedCookiesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "StonedCookies";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StonedCookies> {
    return super.deploy(overrides || {}) as Promise<StonedCookies>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): StonedCookies {
    return super.attach(address) as StonedCookies;
  }
  connect(signer: Signer): StonedCookies__factory {
    return super.connect(signer) as StonedCookies__factory;
  }
  static readonly contractName: "StonedCookies";
  public readonly contractName: "StonedCookies";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StonedCookiesInterface {
    return new utils.Interface(_abi) as StonedCookiesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StonedCookies {
    return new Contract(address, _abi, signerOrProvider) as StonedCookies;
  }
}
